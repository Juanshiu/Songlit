---
export interface Props {
    videoid: string;
    videotitle: string;
}

const { videoid, videotitle } = Astro.props;

// Extract video ID from various YouTube URL formats or use as is if it's already an ID
function getYouTubeID(url: string) {
    if (!url) return '';
    
    // If it's already just an ID (11 characters), return it
    if (url.length === 11) return url;

    // Try to extract ID from various YouTube URL formats
    const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
    const match = url.match(regExp);

    return (match && match[2].length === 11) ? match[2] : url;
}

const videoId = getYouTubeID(videoid);
const posterUrl = `https://i.ytimg.com/vi/${videoId}/maxresdefault.jpg`;
---

<div class="relative w-full aspect-video">
    <lite-youtube
        videoid={videoId}
        videotitle={videotitle}
        class="w-full h-full rounded-lg shadow-lg"
        style={`background-image: url('${posterUrl}');`}
    >
    </lite-youtube>
</div>

<script>
    import '@justinribeiro/lite-youtube';
</script>